version: '3.1'

services:
  
  chatops-db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: user
      POSTGRES_DB : debug
    volumes:
      - chatops-data:/var/lib/postgresql/data
    ports:
      - "6432:5432"
    networks: 
      - pg
    #TODO : healthcheck
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  my_app:
    build: .
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      - chatops-db
    networks: 
      - pg


      
  # nginx:
  #   image: nginx:latest
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./:/etc/nginx/html
  #   depends_on:
  #     - my_app
  #   networks: 
  #     - pg
  
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - pg

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/config.ini:/etc/grafana/config.ini
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    ports:
      - '3000:3000'
    networks:
      - pg

  envoy:
    image: envoyproxy/envoy:v1.18.3
    volumes:
      - ./envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - "10000:10000"
    depends_on:
      - my_app
    networks:
      - pg

volumes:
  chatops-data:

networks:
  pg:
    driver: bridge 