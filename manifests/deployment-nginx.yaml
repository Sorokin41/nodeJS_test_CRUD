apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: nodejs-app
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
          
---
  #kubectl create configmap my-config --from-file=config.json -n my-namespace

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: nodejs-app
data:
  nginx.conf: |
    events {}
    http {
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

      access_log /var/log/nginx/access.log main;
      error_log /var/log/nginx/error.log;
      
      server {
          listen 80;
          server_name example.com;

          # Проксирование запросов к бэкенду
          location /api/ {
              proxy_pass http://my-app:4000/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }

          location / {
              root /usr/share/nginx/html;
              index index.html;
          }
      }
    }

---

apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: nodejs-app
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
